{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\yuyin\\\\onedrive\\\\desktop\\\\Assignment7\\\\src\\\\components\\\\GetData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport GifCard from './GifCard';\nexport default function GetData(props) {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://api.giphy.com/v1/gifs/\" + props.searchTerm + \"?api_key=YOUR_API_KEY\").then(res => res.json()).then(result => {\n      setItems(result[\"data\"]);\n      setIsLoaded(true);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  function ZipList(items) {\n    let cards = [];\n\n    if (items) {\n      cards = items.map(item => {\n        /*#__PURE__*/\n        _jsxDEV(GifCard, {\n          img: item.images.fixed_width.url,\n          title: item.title,\n          url: item.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 7\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    }\n\n    return cards;\n  }\n\n  console.log(items);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: items && items.map((item, index) => /*#__PURE__*/_jsxDEV(GifCard, {\n        img: item.images.fixed_width.url,\n        id: index,\n        title: item.title,\n        url: item.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(GetData, \"m9AscAN57M/MODoTwSsNC5AuztA=\");\n\n_c = GetData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetData\");","map":{"version":3,"sources":["C:/Users/yuyin/onedrive/desktop/Assignment7/src/components/GetData.js"],"names":["React","useState","useEffect","ReactDOM","GifCard","GetData","props","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","searchTerm","then","res","json","result","ZipList","cards","map","item","images","fixed_width","url","title","console","log","message","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,kCAAgCP,KAAK,CAACQ,UAAtC,GAAiD,uBAAlD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVN,MAAAA,QAAQ,CAACM,MAAM,CAAC,MAAD,CAAP,CAAR;AACAR,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KANL,EAOKH,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAVL;AAYD,GAbQ,EAaN,EAbM,CAAT;;AAeD,WAASY,OAAT,CAAiBR,KAAjB,EAAwB;AACvB,QAAIS,KAAK,GAAG,EAAZ;;AACA,QAAIT,KAAJ,EAAW;AACTS,MAAAA,KAAK,GAAGT,KAAK,CAACU,GAAN,CAAUC,IAAI,IAAI;AACxB;AAAA,gBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,IAAI,CAACC,MAAL,CAAYC,WAAZ,CAAwBC,GAAtC;AACS,UAAA,KAAK,EAAEH,IAAI,CAACI,KADrB;AAES,UAAA,GAAG,EAAEJ,IAAI,CAACG;AAFnB;AAAA;AAAA;AAAA;AAAA;AAID,OALO,CAAR;AAMC,KAPH,MAOS;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,WAAOL,KAAP;AACF;;AACDO,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;;AAEC,MAAIJ,KAAJ,EAAW;AACT,wBAAO;AAAA,4BAAaA,KAAK,CAACsB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACpB,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,gBAAME,KAAK,IAAIA,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOQ,KAAP,kBACvB,QAAC,OAAD;AAAS,QAAA,GAAG,EAAER,IAAI,CAACC,MAAL,CAAYC,WAAZ,CAAwBC,GAAtC;AACA,QAAA,EAAE,EAAEK,KADJ;AAEA,QAAA,KAAK,EAAER,IAAI,CAACI,KAFZ;AAGA,QAAA,GAAG,EAAEJ,IAAI,CAACG;AAHV;AAAA;AAAA;AAAA;AAAA,cADa;AAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;AACF;;GApDuBpB,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport GifCard from './GifCard'\r\n\r\nexport default function GetData(props) {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://api.giphy.com/v1/gifs/\"+props.searchTerm+\"?api_key=YOUR_API_KEY\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setItems(result[\"data\"]);\r\n          setIsLoaded(true);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n\r\n function ZipList(items) {\r\n  let cards = []\r\n  if (items) {\r\n    cards = items.map(item => {\r\n      <GifCard img={item.images.fixed_width.url}\r\n               title={item.title}\r\n               url={item.url}\r\n      />\r\n    });\r\n    } else {\r\n      return <h1>Test</h1>\r\n    }\r\n    return cards\r\n }\r\n console.log(items)\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (\r\n      <div>{items && items.map((item, index) =>\r\n        <GifCard img={item.images.fixed_width.url}\r\n        id={index}\r\n        title={item.title}\r\n        url={item.url}\r\n      />)\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}